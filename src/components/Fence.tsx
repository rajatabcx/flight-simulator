/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { JSX, useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader.js';

type GLTFResult = GLTF & {
  nodes: {
    Cylinder095: THREE.Mesh;
    Cylinder095_1: THREE.Mesh;
  };
  materials: {
    ['Black.011']: THREE.MeshStandardMaterial;
    ['Stone.003']: THREE.MeshStandardMaterial;
  };
};

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>(null);
  const { nodes, materials } = useGLTF(
    'https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/fence/model.gltf'
  ) as unknown as GLTFResult;
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        geometry={nodes.Cylinder095.geometry}
        material={materials['Black.011']}
      />
      <mesh
        geometry={nodes.Cylinder095_1.geometry}
        material={materials['Stone.003']}
      />
    </group>
  );
}

useGLTF.preload(
  'https://vazxmixjsiawhamofees.supabase.co/storage/v1/object/public/models/fence/model.gltf'
);
